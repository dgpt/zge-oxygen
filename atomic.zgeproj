<?xml version="1.0" encoding="utf-8"?>
<ZApplication Caption="peace-tree">
  <Content>
    <!-- ZGE Viz built-ins -->
    <DefineArray Name="SpecBandArray" SizeDim1="32"/>
    <DefineArray Name="AudioArray" SizeDim1="1024"/>
    <DefineVariable Name="SongPositionInBeats"/>

    <!-- Slider ranges -->
    <DefineVariable Name="BASE_ROT_MIN" Value="0.0"/>
    <DefineVariable Name="BASE_ROT_DEF" Value="0.0"/>
    <DefineVariable Name="BASE_ROT_MAX" Value="0.5"/>

    <DefineVariable Name="BASE_AS_MIN" Value="0.1"/>
    <DefineVariable Name="BASE_AS_DEF" Value="1.0"/>
    <DefineVariable Name="BASE_AS_MAX" Value="5.0"/>

    <DefineVariable Name="BASE_HUE_MIN" Value="-180.0"/>
    <DefineVariable Name="BASE_HUE_DEF" Value="0.0"/>
    <DefineVariable Name="BASE_HUE_MAX" Value="180.0"/>

    <DefineVariable Name="BASE_SAT_MIN" Value="0.0"/>
    <DefineVariable Name="BASE_SAT_DEF" Value="1.0"/>
    <DefineVariable Name="BASE_SAT_MAX" Value="1.0"/>

    <DefineVariable Name="BASE_LIT_MIN" Value="0.0"/>
    <DefineVariable Name="BASE_LIT_DEF" Value="0.5"/>
    <DefineVariable Name="BASE_LIT_MAX" Value="1.0"/>

    <DefineVariable Name="BASE_ALPHA_MIN" Value="0.0"/>
    <DefineVariable Name="BASE_ALPHA_DEF" Value="1.0"/>
    <DefineVariable Name="BASE_ALPHA_MAX" Value="1.0"/>

    <DefineVariable Name="BASE_SENS_MIN" Value="0.2"/>
    <DefineVariable Name="BASE_SENS_DEF" Value="1.0"/>
    <DefineVariable Name="BASE_SENS_MAX" Value="2.0"/>

    <DefineVariable Name="BASE_SM_MIN" Value="0.0"/>
    <DefineVariable Name="BASE_SM_DEF" Value="0.7"/>
    <DefineVariable Name="BASE_SM_MAX" Value="1.0"/>

    <DefineVariable Name="BASE_ZOOM_MIN" Value="0.5"/>
    <DefineVariable Name="BASE_ZOOM_DEF" Value="1.0"/>
    <DefineVariable Name="BASE_ZOOM_MAX" Value="3.0"/>

    <!-- Slider parameters -->
    <DefineArray Name="Parameters" SizeDim1="9"/>
    <DefineConstant Name="ParamHelpConst" Type="2"
      StringValue="Rotation Speed&#10;Animation Speed&#10;Hue Offset&#10;Saturation&#10;Lightness&#10;Alpha&#10;Sensitivity&#10;Smoothness&#10;Zoom"/>

    <!-- Runtime state -->
    <DefineVariable Name="RotSpeed" Value="0.0"/>
    <DefineVariable Name="AnimSpeed" Value="1.0"/>
    <DefineVariable Name="HueOffset" Value="0.0"/>
    <DefineVariable Name="Saturation" Value="1.0"/>
    <DefineVariable Name="Lightness" Value="0.5"/>
    <DefineVariable Name="Alpha" Value="1.0"/>
    <DefineVariable Name="Sensitivity" Value="1.0"/>
    <DefineVariable Name="Smooth" Value="0.7"/>
    <DefineVariable Name="Zoom" Value="1.0"/>
    <DefineVariable Name="Growth" Value="0.0"/>
    <DefineVariable Name="AudioDrive" Value="0.0"/>
    <DefineVariable Name="uTimeVar" Value="0.0"/>

      <!-- Fullscreen shader for tree rendering -->
      <Shader Name="TreeShader">
        <VertexShaderSource><![CDATA[
#version 120
varying vec2 vUv;
void main(){
  vUv = gl_MultiTexCoord0.xy;
  gl_Position = ftransform();
}]]></VertexShaderSource>
        <FragmentShaderSource><![CDATA[
#version 120
varying vec2 vUv;
uniform float uTime;
uniform float uHue;
uniform float uSat;
uniform float uLight;
uniform float uAlpha;
uniform float uGrowth;
uniform float uRot;
uniform float uZoom;

float sdSphere(vec3 p, float r){return length(p)-r;}
float sdCappedCylinder(vec3 p, float h, float r){
  vec2 d = abs(vec2(length(p.xz), p.y)) - vec2(r, h);
  return min(max(d.x, d.y),0.0) + length(max(d,0.0));
}

vec3 hsl2rgb(float h, float s, float l){
  float C = (1.0 - abs(2.0*l - 1.0)) * s;
  float X = C * (1.0 - abs(mod(h/60.0, 2.0) - 1.0));
  float m = l - C/2.0;
  vec3 rgb;
  if(h < 60.0)      rgb = vec3(C,X,0);
  else if(h < 120.0) rgb = vec3(X,C,0);
  else if(h < 180.0) rgb = vec3(0,C,X);
  else if(h < 240.0) rgb = vec3(0,X,C);
  else if(h < 300.0) rgb = vec3(X,0,C);
  else               rgb = vec3(C,0,X);
  return rgb + vec3(m);
}

float treeMap(vec3 p, float g, float h, float c){
  float trunk = sdCappedCylinder(p-vec3(0.0,h*0.5,0.0), h*0.5, 0.1);
  float canopy = sdSphere(p-vec3(0.0,h,0.0), c);
  float seed = sdSphere(p, 0.15*(1.0-g*5.0));
  return min(min(trunk, canopy), seed);
}

void main(){
  vec2 uv = vUv*2.0-1.0;
  float g = clamp(uGrowth,0.0,1.0);
  float trunkH = mix(0.2,2.5,g);
  float canopyR = smoothstep(0.3,1.0,g)*1.2;
  float camDist = mix(2.5,5.0,g)*uZoom;
  vec3 ro = vec3(sin(uRot)*camDist, trunkH*0.6, cos(uRot)*camDist);
  vec3 target = vec3(0.0,trunkH*0.5,0.0);
  vec3 ww = normalize(target-ro);
  vec3 uu = normalize(cross(vec3(0,1,0),ww));
  vec3 vv = cross(ww,uu);
  vec3 rd = normalize(uv.x*uu + uv.y*vv + 1.5*ww);
  float t=0.0;
  float d=0.0;
  for(int i=0;i<96;i++){
    vec3 p = ro + rd*t;
    d = treeMap(p,g,trunkH,canopyR);
    if(abs(d)<0.001 || t>20.0) break;
    t += d;
  }
  vec3 col = vec3(0.0);
  if(t<20.0){
    vec3 p = ro + rd*t;
    float canopyMask = step(trunkH*0.8,p.y);
    vec3 base;
    if(canopyMask>0.5)
      base = hsl2rgb(uHue+340.0,uSat*0.5,uLight*0.8);
    else
      base = hsl2rgb(uHue+30.0,uSat*0.6,uLight*0.3);
    col = base;
  }
  gl_FragColor = vec4(col, uAlpha);
}]]></FragmentShaderSource>
        <ShaderVariable Name="uTime" Variable="uTimeVar"/>
        <ShaderVariable Name="uHue" Variable="HueOffset"/>
        <ShaderVariable Name="uSat" Variable="Saturation"/>
        <ShaderVariable Name="uLight" Variable="Lightness"/>
        <ShaderVariable Name="uAlpha" Variable="Alpha"/>
        <ShaderVariable Name="uGrowth" Variable="Growth"/>
        <ShaderVariable Name="uRot" Variable="uRotAccum"/>
        <ShaderVariable Name="uZoom" Variable="Zoom"/>
      </Shader>
      <Material Name="Mat" Shader="TreeShader" />
      <DefineVariable Name="uRotAccum" Value="0.0"/>
    </Content>

    <OnLoaded>
      <ZExpression><![CDATA[
    Parameters[0]=0.5;
    Parameters[1]=0.5;
    Parameters[2]=0.5;
    Parameters[3]=0.5;
    Parameters[4]=0.5;
    Parameters[5]=1.0;
    Parameters[6]=0.5;
    Parameters[7]=0.5;
    Parameters[8]=0.5;
      ]]></ZExpression>
    </OnLoaded>

    <OnRender>
      <ZExpression><![CDATA[
    uTimeVar = uTimeVar + 0.016;

  float p;

    p = Parameters[0];
    if(p<0.5) RotSpeed = BASE_ROT_MIN + (BASE_ROT_DEF-BASE_ROT_MIN)*(p*2.0);
    else      RotSpeed = BASE_ROT_DEF + (BASE_ROT_MAX-BASE_ROT_DEF)*(p*2.0-1.0);

    p = Parameters[1];
    if(p<0.5) AnimSpeed = BASE_AS_MIN + (BASE_AS_DEF-BASE_AS_MIN)*(p*2.0);
    else      AnimSpeed = BASE_AS_DEF + (BASE_AS_MAX-BASE_AS_DEF)*(p*2.0-1.0);

    p = Parameters[2];
    if(p<0.5) HueOffset = BASE_HUE_MIN + (BASE_HUE_DEF-BASE_HUE_MIN)*(p*2.0);
    else      HueOffset = BASE_HUE_DEF + (BASE_HUE_MAX-BASE_HUE_DEF)*(p*2.0-1.0);

    p = Parameters[3];
    if(p<0.5) Saturation = BASE_SAT_MIN + (BASE_SAT_DEF-BASE_SAT_MIN)*(p*2.0);
    else      Saturation = BASE_SAT_DEF + (BASE_SAT_MAX-BASE_SAT_DEF)*(p*2.0-1.0);

    p = Parameters[4];
    if(p<0.5) Lightness = BASE_LIT_MIN + (BASE_LIT_DEF-BASE_LIT_MIN)*(p*2.0);
    else      Lightness = BASE_LIT_DEF + (BASE_LIT_MAX-BASE_LIT_DEF)*(p*2.0-1.0);

    p = Parameters[5];
    Alpha = BASE_ALPHA_MIN + (BASE_ALPHA_MAX-BASE_ALPHA_MIN)*p;

    p = Parameters[6];
    if(p<0.5) Sensitivity = BASE_SENS_MIN + (BASE_SENS_DEF-BASE_SENS_MIN)*(p*2.0);
    else      Sensitivity = BASE_SENS_DEF + (BASE_SENS_MAX-BASE_SENS_DEF)*(p*2.0-1.0);

    p = Parameters[7];
    if(p<0.5) Smooth = BASE_SM_MIN + (BASE_SM_DEF-BASE_SM_MIN)*(p*2.0);
    else      Smooth = BASE_SM_DEF + (BASE_SM_MAX-BASE_SM_DEF)*(p*2.0-1.0);

    p = Parameters[8];
    if(p<0.5) Zoom = BASE_ZOOM_MIN + (BASE_ZOOM_DEF-BASE_ZOOM_MIN)*(p*2.0);
    else      Zoom = BASE_ZOOM_DEF + (BASE_ZOOM_MAX-BASE_ZOOM_DEF)*(p*2.0-1.0);

  float a = AudioArray[0]*Sensitivity;
  AudioDrive = AudioDrive*(1.0-Smooth) + a*Smooth;
  Growth = Growth + (AnimSpeed + AudioDrive) * 0.016;
  if(Growth>1.0) Growth=1.0;

  uRotAccum = uRotAccum + RotSpeed * 0.016;
      ]]></ZExpression>
      <UseMaterial Material="Mat"/>
      <RenderTransformGroup Scale="20 20 1">
	
        <Children>
          <RenderSprite/>
        </Children>
      </RenderTransformGroup>
    </OnRender>
  </ZApplication>
